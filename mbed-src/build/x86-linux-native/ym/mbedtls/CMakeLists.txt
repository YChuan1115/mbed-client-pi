# NOTE: This file is generated by yotta: changes will be overwritten!


project(mbedtls)


# include root directories of all components we depend on (directly and
# indirectly, including ourself)
include_directories("/root/mbed/mymbed/trunk/git/mbed-client-linux-example")
include_directories("/root/mbed/mymbed/trunk/git/mbed-client-linux-example/yotta_modules/mbedtls")


# recurse into dependencies that aren't built elsewhere




# modules with custom CMake build systems may append to the
# YOTTA_GLOBAL_INCLUDE_DIRS property to add compile-time-determined include
# directories:
get_property(GLOBAL_INCLUDE_DIRS GLOBAL PROPERTY YOTTA_GLOBAL_INCLUDE_DIRS)
include_directories(${GLOBAL_INCLUDE_DIRS})

# Provide versions of all the components we depend on, the corresponding
# preprocessor definitions are generated in yotta_config.h
set(YOTTA_MBEDTLS_VERSION_STRING "2.3.1")
set(YOTTA_MBEDTLS_VERSION_MAJOR 2)
set(YOTTA_MBEDTLS_VERSION_MINOR 3)
set(YOTTA_MBEDTLS_VERSION_PATCH 1)

# provide the name of the current module so that it's available to custom CMake
# even if custom CMake does weird things with project()
set(YOTTA_MODULE_NAME mbedtls)

# recurse into subdirectories for this component, using the two-argument
# add_subdirectory because the directories referred to here exist in the source
# tree, not the working directory
add_subdirectory(
    "/root/mbed/mymbed/trunk/git/mbed-client-linux-example/build/x86-linux-native/ym/mbedtls/source"
    "${CMAKE_BINARY_DIR}/ym/mbedtls/source"
)
add_subdirectory(
    "/root/mbed/mymbed/trunk/git/mbed-client-linux-example/build/x86-linux-native/ym/mbedtls/test"
    "${CMAKE_BINARY_DIR}/ym/mbedtls/test"
)

# make YOTTA_MODULE_NAME available as a preprocessor symbol when
# compiling this module:
target_compile_definitions(mbedtls PRIVATE "-DYOTTA_MODULE_NAME=mbedtls")

# include .cmake files provided by the target:
